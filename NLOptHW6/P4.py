import numpy as np
import matplotlib.pyplot as plt

#################
# generating data

# The row player is player 1, the column player is player 2

# This is the payoff matrix for player 1 in rock paper (super) scissors.
U_rps = np.array([[0, -1, 1], [1, 0, -2], [-1, 2, 0]])

# This is the payoff matrix for player 1 in Kuhn poker.
U_kuhn = np.array([
    [+0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00,
     +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01,
     +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00,
     +3.33e-01, +3.33e-01, -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00,
     -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, -3.33e-01, -3.33e-01,
     +0.00e+00, +0.00e+00, -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00,
     -3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, ],
    [+0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00,
     -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00,
     -1.67e-01, -1.67e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01,
     -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01,
     -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01,
     -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, ],
    [+0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01,
     +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01,
     +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +5.00e-01, +3.33e-01,
     +6.67e-01, +5.00e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, +3.33e-01, +1.67e-01,
     +5.00e-01, +3.33e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01,
     +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, ],
    [+0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, -5.00e-01, -5.00e-01,
     -6.67e-01, -6.67e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, -5.00e-01, -5.00e-01,
     -6.67e-01, -6.67e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01,
     -8.33e-01, -8.33e-01, -1.00e+00, -1.00e+00, -8.33e-01, -8.33e-01, -1.00e+00, -1.00e+00, -3.33e-01, -3.33e-01,
     -5.00e-01, -5.00e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, -8.33e-01, -8.33e-01, -1.00e+00, -1.00e+00,
     -8.33e-01, -8.33e-01, -1.00e+00, -1.00e+00, ],
    [+0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, -5.00e-01, -5.00e-01,
     -1.17e+00, -1.17e+00, -5.00e-01, -5.00e-01, -1.17e+00, -1.17e+00, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01,
     +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, -5.00e-01, -5.00e-01, -1.17e+00, -1.17e+00, -5.00e-01, -5.00e-01,
     -1.17e+00, -1.17e+00, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01,
     -6.67e-01, -6.67e-01, -1.33e+00, -1.33e+00, -6.67e-01, -6.67e-01, -1.33e+00, -1.33e+00, -1.67e-01, -1.67e-01,
     -8.33e-01, -8.33e-01, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01, -6.67e-01, -6.67e-01, -1.33e+00, -1.33e+00,
     -6.67e-01, -6.67e-01, -1.33e+00, -1.33e+00, ],
    [+0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, -5.00e-01, -6.67e-01,
     -8.33e-01, -1.00e+00, -5.00e-01, -6.67e-01, -8.33e-01, -1.00e+00, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00,
     +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, -5.55e-17, -1.67e-01, -3.33e-01, -5.00e-01, -5.55e-17, -1.67e-01,
     -3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01,
     -6.67e-01, -8.33e-01, -1.00e+00, -1.17e+00, -6.67e-01, -8.33e-01, -1.00e+00, -1.17e+00, +3.33e-01, +1.67e-01,
     -5.55e-17, -1.67e-01, +3.33e-01, +1.67e-01, -5.55e-17, -1.67e-01, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01,
     -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, ],
    [+3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +1.67e-01, +0.00e+00,
     +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01,
     +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01,
     +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01,
     +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01,
     -3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, ],
    [+3.33e-01, +1.67e-01, -2.78e-17, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +1.67e-01, +0.00e+00,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +3.33e-01, +1.67e-01, -2.78e-17, -1.67e-01,
     +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01,
     -3.33e-01, -5.00e-01, +1.67e-01, -5.55e-17, -1.67e-01, -3.33e-01, -5.55e-17, -1.67e-01, -3.33e-01, -5.00e-01,
     +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, +1.67e-01, -5.55e-17,
     -1.67e-01, -3.33e-01, -5.55e-17, -1.67e-01, -3.33e-01, -5.00e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01,
     -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, ],
    [+3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01,
     +1.67e-01, -1.67e-01, +0.00e+00, -3.33e-01, +0.00e+00, -3.33e-01, +8.33e-01, +5.00e-01, +8.33e-01, +5.00e-01,
     +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, +5.00e-01, +1.67e-01,
     +5.00e-01, +1.67e-01, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01, +0.00e+00, -3.33e-01, +0.00e+00, -3.33e-01,
     +1.11e-16, -3.33e-01, +1.11e-16, -3.33e-01, -1.67e-01, -5.00e-01, -1.67e-01, -5.00e-01, +6.67e-01, +3.33e-01,
     +6.67e-01, +3.33e-01, +5.00e-01, +1.67e-01, +5.00e-01, +1.67e-01, +5.00e-01, +1.67e-01, +5.00e-01, +1.67e-01,
     +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, ],
    [+0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01,
     +5.00e-01, +5.00e-01, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01, +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01,
     +0.00e+00, +0.00e+00, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01, +1.67e-01, +1.67e-01,
     +5.00e-01, +5.00e-01, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01,
     -5.55e-17, -5.55e-17, +3.33e-01, +3.33e-01, -5.55e-17, -5.55e-17, +3.33e-01, +3.33e-01, -1.67e-01, -1.67e-01,
     +1.67e-01, +1.67e-01, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01, -5.55e-17, -5.55e-17, +3.33e-01, +3.33e-01,
     -5.55e-17, -5.55e-17, +3.33e-01, +3.33e-01, ],
    [+0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01,
     +0.00e+00, +0.00e+00, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, +1.67e-01, +1.67e-01,
     +0.00e+00, +0.00e+00, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, +0.00e+00, +0.00e+00,
     -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00,
     +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, ],
    [+0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +1.67e-01, +0.00e+00,
     +3.33e-01, +1.67e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01,
     +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01, +6.67e-01, +5.00e-01,
     +8.33e-01, +6.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00,
     +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01,
     +6.67e-01, +5.00e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01,
     +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01, ],
    [+0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01,
     -5.00e-01, -5.00e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, -3.33e-01, -3.33e-01,
     -5.00e-01, -5.00e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01,
     -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, -1.67e-01, -1.67e-01,
     -3.33e-01, -3.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01,
     -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, ],
    [+0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, -3.33e-01, -3.33e-01,
     -1.00e+00, -1.00e+00, -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01,
     +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, -3.33e-01, -3.33e-01,
     -1.00e+00, -1.00e+00, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01,
     -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, +0.00e+00, +0.00e+00,
     -6.67e-01, -6.67e-01, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01, -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00,
     -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, ],
    [+0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, -3.33e-01, -5.00e-01,
     -6.67e-01, -8.33e-01, -3.33e-01, -5.00e-01, -6.67e-01, -8.33e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00,
     +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +1.67e-01, +0.00e+00,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01,
     -3.33e-01, -5.00e-01, -6.67e-01, -8.33e-01, -3.33e-01, -5.00e-01, -6.67e-01, -8.33e-01, +5.00e-01, +3.33e-01,
     +1.67e-01, +0.00e+00, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +1.67e-01, -2.78e-17, -1.67e-01, -3.33e-01,
     +1.67e-01, -2.78e-17, -1.67e-01, -3.33e-01, ],
    [+3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +3.33e-01, +1.67e-01,
     +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01,
     +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00,
     +3.33e-01, +1.67e-01, +1.67e-01, -5.55e-17, +3.33e-01, +1.67e-01, -5.55e-17, -1.67e-01, +1.67e-01, -2.78e-17,
     +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, -5.55e-17, +1.67e-01, -5.55e-17,
     +3.33e-01, +1.67e-01, -5.55e-17, -1.67e-01, +1.67e-01, -2.78e-17, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01,
     +0.00e+00, -1.67e-01, +1.67e-01, -5.55e-17, ],
    [+3.33e-01, +1.67e-01, -2.78e-17, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01,
     +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01, -2.78e-17, -1.67e-01,
     +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00,
     -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01,
     +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +1.67e-01, -2.78e-17, -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01,
     +0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01,
     +1.67e-01, -2.78e-17, -1.67e-01, -3.33e-01, ],
    [+3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01, +3.33e-01, +0.00e+00,
     +3.33e-01, +0.00e+00, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01, +8.33e-01, +5.00e-01, +8.33e-01, +5.00e-01,
     +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, +8.33e-01, +5.00e-01, +8.33e-01, +5.00e-01, +6.67e-01, +3.33e-01,
     +6.67e-01, +3.33e-01, +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01,
     +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.67e-01, -1.67e-01, +1.67e-01, -1.67e-01, +8.33e-01, +5.00e-01,
     +8.33e-01, +5.00e-01, +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, +8.33e-01, +5.00e-01, +8.33e-01, +5.00e-01,
     +6.67e-01, +3.33e-01, +6.67e-01, +3.33e-01, ],
    [-3.33e-01, -3.33e-01, +0.00e+00, +0.00e+00, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01, -1.67e-01, -1.67e-01,
     +1.67e-01, +1.67e-01, +3.33e-01, +3.33e-01, +6.67e-01, +6.67e-01, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01,
     +6.67e-01, +6.67e-01, +1.00e+00, +1.00e+00, +3.33e-01, +3.33e-01, +6.67e-01, +6.67e-01, +8.33e-01, +8.33e-01,
     +1.17e+00, +1.17e+00, -5.00e-01, -5.00e-01, -1.67e-01, -1.67e-01, +2.78e-17, +2.78e-17, +3.33e-01, +3.33e-01,
     -3.33e-01, -3.33e-01, +1.11e-16, +1.11e-16, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01, +2.78e-17, +2.78e-17,
     +3.33e-01, +3.33e-01, +5.00e-01, +5.00e-01, +8.33e-01, +8.33e-01, +1.67e-01, +1.67e-01, +5.00e-01, +5.00e-01,
     +6.67e-01, +6.67e-01, +1.00e+00, +1.00e+00, ],
    [-3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01,
     -3.33e-01, -3.33e-01, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00,
     +6.67e-01, +6.67e-01, +5.00e-01, +5.00e-01, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01, +8.33e-01, +8.33e-01,
     +6.67e-01, +6.67e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00,
     -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01, +1.67e-01, +1.67e-01,
     +0.00e+00, +0.00e+00, +6.67e-01, +6.67e-01, +5.00e-01, +5.00e-01, +3.33e-01, +3.33e-01, +1.67e-01, +1.67e-01,
     +8.33e-01, +8.33e-01, +6.67e-01, +6.67e-01, ],
    [-3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, -1.67e-01, -3.33e-01,
     +0.00e+00, -1.67e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01,
     +1.17e+00, +1.00e+00, +1.33e+00, +1.17e+00, +8.33e-01, +6.67e-01, +1.00e+00, +8.33e-01, +1.33e+00, +1.17e+00,
     +1.50e+00, +1.33e+00, -3.33e-01, -5.00e-01, -1.67e-01, -3.33e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01,
     +8.33e-01, +6.67e-01, +1.17e+00, +1.00e+00, +1.33e+00, +1.17e+00, +8.33e-01, +6.67e-01, +1.00e+00, +8.33e-01,
     +1.33e+00, +1.17e+00, +1.50e+00, +1.33e+00, ],
    [-3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, -6.67e-01, -6.67e-01,
     -8.33e-01, -8.33e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00,
     +6.67e-01, +6.67e-01, +5.00e-01, +5.00e-01, -1.67e-01, -1.67e-01, -3.33e-01, -3.33e-01, +3.33e-01, +3.33e-01,
     +1.67e-01, +1.67e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01, +2.78e-17, +2.78e-17, -1.67e-01, -1.67e-01,
     -8.33e-01, -8.33e-01, -1.00e+00, -1.00e+00, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01, +2.78e-17, +2.78e-17,
     -1.67e-01, -1.67e-01, +5.00e-01, +5.00e-01, +3.33e-01, +3.33e-01, -3.33e-01, -3.33e-01, -5.00e-01, -5.00e-01,
     +1.67e-01, +1.67e-01, +0.00e+00, +0.00e+00, ],
    [-3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, +1.67e-01, +1.67e-01, -5.00e-01, -5.00e-01, -6.67e-01, -6.67e-01,
     -1.33e+00, -1.33e+00, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01, +1.67e-01, +1.67e-01, -5.00e-01, -5.00e-01,
     +6.67e-01, +6.67e-01, +0.00e+00, +0.00e+00, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01, +3.33e-01, +3.33e-01,
     -3.33e-01, -3.33e-01, -3.33e-01, -3.33e-01, -1.00e+00, -1.00e+00, +1.67e-01, +1.67e-01, -5.00e-01, -5.00e-01,
     -6.67e-01, -6.67e-01, -1.33e+00, -1.33e+00, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01, +1.67e-01, +1.67e-01,
     -5.00e-01, -5.00e-01, +6.67e-01, +6.67e-01, -2.78e-17, -2.78e-17, -1.67e-01, -1.67e-01, -8.33e-01, -8.33e-01,
     +3.33e-01, +3.33e-01, -3.33e-01, -3.33e-01, ],
    [-3.33e-01, -5.00e-01, -6.67e-01, -8.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01, -6.67e-01, -8.33e-01,
     -1.00e+00, -1.17e+00, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, +6.67e-01, +5.00e-01, +3.33e-01, +1.67e-01,
     +1.17e+00, +1.00e+00, +8.33e-01, +6.67e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +8.33e-01, +6.67e-01,
     +5.00e-01, +3.33e-01, -3.33e-01, -5.00e-01, -6.67e-01, -8.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, -3.33e-01,
     -6.67e-01, -8.33e-01, -1.00e+00, -1.17e+00, -1.67e-01, -3.33e-01, -5.00e-01, -6.67e-01, +6.67e-01, +5.00e-01,
     +3.33e-01, +1.67e-01, +1.17e+00, +1.00e+00, +8.33e-01, +6.67e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01,
     +8.33e-01, +6.67e-01, +5.00e-01, +3.33e-01, ],
    [+0.00e+00, -1.67e-01, +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +0.00e+00, -1.67e-01,
     +1.67e-01, +0.00e+00, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01,
     +8.33e-01, +6.67e-01, +1.00e+00, +8.33e-01, +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01,
     +1.00e+00, +8.33e-01, -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, +1.67e-01, +2.78e-17, +3.33e-01, +1.67e-01,
     -1.67e-01, -3.33e-01, +0.00e+00, -1.67e-01, +1.67e-01, +2.78e-17, +3.33e-01, +1.67e-01, +3.33e-01, +1.67e-01,
     +5.00e-01, +3.33e-01, +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01, +3.33e-01, +1.67e-01, +5.00e-01, +3.33e-01,
     +6.67e-01, +5.00e-01, +8.33e-01, +6.67e-01, ],
    [+0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +0.00e+00, -1.67e-01,
     -3.33e-01, -5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00,
     +8.33e-01, +6.67e-01, +5.00e-01, +3.33e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, +8.33e-01, +6.67e-01,
     +5.00e-01, +3.33e-01, +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01,
     +0.00e+00, -1.67e-01, -3.33e-01, -5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00, -1.67e-01, +5.00e-01, +3.33e-01,
     +1.67e-01, +0.00e+00, +8.33e-01, +6.67e-01, +5.00e-01, +3.33e-01, +5.00e-01, +3.33e-01, +1.67e-01, +0.00e+00,
     +8.33e-01, +6.67e-01, +5.00e-01, +3.33e-01, ],
    [+0.00e+00, -3.33e-01, +0.00e+00, -3.33e-01, +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +0.00e+00, -3.33e-01,
     +0.00e+00, -3.33e-01, +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.00e+00, +6.67e-01, +1.00e+00, +6.67e-01,
     +1.33e+00, +1.00e+00, +1.33e+00, +1.00e+00, +1.00e+00, +6.67e-01, +1.00e+00, +6.67e-01, +1.33e+00, +1.00e+00,
     +1.33e+00, +1.00e+00, +0.00e+00, -3.33e-01, +0.00e+00, -3.33e-01, +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00,
     +0.00e+00, -3.33e-01, +0.00e+00, -3.33e-01, +3.33e-01, +0.00e+00, +3.33e-01, +0.00e+00, +1.00e+00, +6.67e-01,
     +1.00e+00, +6.67e-01, +1.33e+00, +1.00e+00, +1.33e+00, +1.00e+00, +1.00e+00, +6.67e-01, +1.00e+00, +6.67e-01,
     +1.33e+00, +1.00e+00, +1.33e+00, +1.00e+00, ],
])


#################
def game_normalize(regrets):
    pass

    # normalize regrets to get strategy

    #############################
    # write your code here


    ##############################

def RM(U, max_iter=10000):
    # U: the pay off matrix
    # max_iter: number of iterations

    # record regret
    reg_trajectory = np.zeros((max_iter,))

    regrets_pl1 = np.zeros(U.shape[0])
    regrets_pl2 = np.zeros(U.shape[1])

    x_avg = np.zeros_like(regrets_pl1)
    y_avg = np.zeros_like(regrets_pl2)

    for t in range(max_iter):
        pass

        #############################
        # write your code here

        ##############################

    print("The value of the game is {}".format(x_avg @ U @ y_avg))

    return reg_trajectory


def soft_max(z):
    #############################
    # write your code here
    pass

    ##############################

def MWU(U, eta=1, max_iter=10000):
    # U: the pay off matrix
    # eta: parameter of MWU
    # max_iter: number of iterations

    # record regret
    reg_trajectory = np.zeros((max_iter,))
    value_trajectory = np.zeros((max_iter,))

    regrets_pl1 = np.zeros(U.shape[0])
    regrets_pl2 = np.zeros(U.shape[1])

    x_avg = np.zeros_like(regrets_pl1)
    y_avg = np.zeros_like(regrets_pl2)

    for t in range(max_iter):
        pass
        #############################
        # write your code here

        ##############################

    print("The value of the game is {}".format(x_avg @ U @ y_avg))

    return reg_trajectory

if __name__=="__main__":
    reg_trajectory1 = RM(U_rps, max_iter=10000)
    reg_trajectory2 = MWU(U_rps, eta=0.1, max_iter=10000)
    reg_trajectory3 = MWU(U_rps, eta=0.5, max_iter=10000)
    reg_trajectory4 = MWU(U_rps, eta=1, max_iter=10000)
    fig, ax = plt.subplots()

    # Plot the data
    ax.plot(np.arange(len(reg_trajectory1)), reg_trajectory1, linewidth=2, label='RM -- rps')
    ax.plot(np.arange(len(reg_trajectory2)), reg_trajectory2, linewidth=2, label='MWU -- rps (eta=0.1)')
    ax.plot(np.arange(len(reg_trajectory3)), reg_trajectory3, linewidth=2, label='MWU -- rps (eta=0.5)')
    ax.plot(np.arange(len(reg_trajectory4)), reg_trajectory4, linewidth=2, label='MWU -- rps (eta=1)')
    # Set labels and title
    ax.set_xlabel('Number of iteration')
    ax.set_ylabel('Regret')
    ax.set_title('Regret v.s. Number of iteration')

    # Add a legend
    ax.legend()

    # Display the plot
    plt.show()
    reg_trajectory5 = RM(U_kuhn, max_iter=10000)
    reg_trajectory6 = MWU(U_kuhn, eta=0.1, max_iter=10000)
    reg_trajectory7 = MWU(U_kuhn, eta=0.5, max_iter=10000)
    reg_trajectory8 = MWU(U_kuhn, eta=1, max_iter=10000)
    fig, ax = plt.subplots()

    # Plot the data
    ax.plot(np.arange(len(reg_trajectory5)), reg_trajectory5, linewidth=2, label='RM -- kuhn')
    ax.plot(np.arange(len(reg_trajectory6)), reg_trajectory6, linewidth=2, label='MWU -- kuhn (eta=0.1)')
    ax.plot(np.arange(len(reg_trajectory7)), reg_trajectory7, linewidth=2, label='MWU -- kuhn (eta=0.5)')
    ax.plot(np.arange(len(reg_trajectory8)), reg_trajectory8, linewidth=2, label='MWU -- kuhn (eta=1)')
    # Set labels and title
    ax.set_xlabel('Number of iteration')
    ax.set_ylabel('Regret')
    ax.set_title('Regret v.s. Number of iteration')

    # Add a legend
    ax.legend()

    # Display the plot
    plt.show()